/*
 * PridePlus Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/MolokyMC/PridePlus/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.features.module.ModuleInfo
import net.ccbluex.liquidbounce.features.value.FloatValue
import net.ccbluex.liquidbounce.features.value.ListValue
import net.minecraft.network.play.client.CPacketPlayer
import kotlin.math.cos
import kotlin.math.sin

@ModuleInfo(name = "Clip", description = "Allows you to clip through blocks.", category = ModuleCategory.EXPLOIT, canEnable = false)
class Clip : Module() {

    private val modeValue = ListValue("Mode", arrayOf("Teleport", "Flag"), "Teleport")
    private val horizontalValue = FloatValue("Horizontal", 0F, -10F, 10F)
    private val verticalValue = FloatValue("Vertical", 5F, -10F, 10F)

    override fun onEnable() {
        val player = mc.player ?: return

        val yaw = Math.toRadians(player.rotationYaw.toDouble())
        val x = -sin(yaw) * horizontalValue.get()
        val z = cos(yaw) * horizontalValue.get()

        when (modeValue.get().toLowerCase()) {
            "teleport" -> player.setPosition(player.posX + x, player.posY + verticalValue.get(),
                    player.posZ + z)

            "flag" -> {
                val netHandler = mc.connection!!

                netHandler.sendPacket(CPacketPlayer.Position(player.posX,
                        player.posY, player.posZ, true))
                netHandler.sendPacket(CPacketPlayer.Position(0.5, 0.0,
                        0.5, true))
                netHandler.sendPacket(CPacketPlayer.Position(player.posX,
                        player.posY, player.posZ, true))
                netHandler.sendPacket(CPacketPlayer.Position(player.posX + x,
                        player.posY + verticalValue.get(), player.posZ + z, true))
                netHandler.sendPacket(CPacketPlayer.Position(0.5,
                        0.0, 0.5, true))
                netHandler.sendPacket(CPacketPlayer.Position(player.posX
                        + 0.5, player.posY, player.posZ + 0.5, true))

                player.setPosition(player.posX + -sin(yaw) * 0.04, player.posY,
                        player.posZ + cos(yaw) * 0.04)
            }
        }
    }

}